<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jintin&#39;s Note</title>
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://Jintin.github.io/blog/"/>
  <updated>2016-03-01T14:19:19.000Z</updated>
  <id>https://Jintin.github.io/blog/</id>
  
  <author>
    <name>Jintin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>每月一語</title>
    <link href="https://Jintin.github.io/blog/2016/02/28/monthly-github/"/>
    <id>https://Jintin.github.io/blog/2016/02/28/monthly-github/</id>
    <published>2016-02-28T12:22:10.000Z</published>
    <updated>2016-03-01T14:19:19.000Z</updated>
    
    <content type="html">&lt;p&gt;當工程師好幾年了，但一直都只專注寫Java，雖然對Java沒什麼特別不滿意的地方，但偶而也想多試試其它語言來增加自己的視野，於是大概在半年前開始給自己一個挑戰，每個月用一個不熟的語言寫個小工具分享到github上，很快地累積了好幾個小專案，分享自己的心得也順便介紹這些工具給大家，希望對大家有所幫助。&lt;/p&gt;&lt;h2 id=&quot;jgit-Ruby&quot;&gt;&lt;a href=&quot;#jgit-Ruby&quot; class=&quot;headerlink&quot; title=&quot;jgit (Ruby)&quot;&gt;&lt;/a&gt;jgit (Ruby)&lt;/h2&gt;&lt;p&gt;git是個很高效好用的版本控制工具，但如果同時有多個專案使用上有點不方便。jgit就是想要解決這個情境，對git做擴展，解決在任意目錄下查詢任意一個或多個專案的git狀態，簡單說就是把git command分配到很多個目錄下執行。&lt;br&gt;比如說 &lt;code&gt;jgit status&lt;/code&gt; 可以取得目前群組的所有專案之 &lt;code&gt;git status&lt;/code&gt; 的結果，如果同時要開發或維護多個專案的時候很方便。&lt;/p&gt;&lt;p&gt;範例如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jgit ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A: /Users/Jintin/Downloads/sample/sampleA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B: /Users/Jintin/Desktop/sample/sampleB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ jgit status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; - Task:A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nothing to commit, working directory clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; - Task:B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Changes not staged &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; commit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (use &lt;span class=&quot;string&quot;&gt;&quot;git add &amp;lt;file&amp;gt;...&quot;&lt;/span&gt; to update what will be committed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (use &lt;span class=&quot;string&quot;&gt;&quot;git checkout -- &amp;lt;file&amp;gt;...&quot;&lt;/span&gt; to discard changes &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; working directory)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	modified:   newFile.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;no changes added to commit (use &lt;span class=&quot;string&quot;&gt;&quot;git add&quot;&lt;/span&gt; and/or &lt;span class=&quot;string&quot;&gt;&quot;git commit -a&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;心得: 寫ruby一開始的時候蠻不習慣的，少了型別、不用compile、語法也很不習慣。但慢慢覺得動態語言在小型專案下真的可以很方便解決很多問題，&lt;code&gt;gem&lt;/code&gt; 的設計很棒，不用compile習慣後開發速度也提升不少。&lt;/p&gt;&lt;p&gt;更多資訊可以參考 &lt;a href=&quot;https://github.com/Jintin/jgit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Jintin/jgit&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;transai-JavaScript&quot;&gt;&lt;a href=&quot;#transai-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;transai (JavaScript)&quot;&gt;&lt;/a&gt;transai (JavaScript)&lt;/h2&gt;&lt;p&gt;transai 是處理Android, iOS多國語言的工具，可以在Terminal把這二個平台的語言檔解析出來合併為csv格式，等翻譯完了之後再轉回各自的資料夾中。&lt;/p&gt;&lt;p&gt;範例如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ transai load &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; ~/android -i ~/ios --from en --to de -c ~/strings.csv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ transai save &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; ~/android -i ~/ios --from en --to de -c ~/strings.csv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;心得: JavaScript跟Ruby一樣是動態但語法平易近人多了，而且 &lt;code&gt;npm&lt;/code&gt; 、 &lt;code&gt;node&lt;/code&gt; 的設計又更完善方便，是很好入門的一款語言，在各領域也都有很好的發揮機會，雖然不想承認但的確是最有機會統一程式語言的語言。&lt;/p&gt;&lt;p&gt;更多資訊可以參考 &lt;a href=&quot;https://github.com/Jintin/transai&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Jintin/transai&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;andle-Python&quot;&gt;&lt;a href=&quot;#andle-Python&quot; class=&quot;headerlink&quot; title=&quot;andle (Python)&quot;&gt;&lt;/a&gt;andle (Python)&lt;/h2&gt;&lt;p&gt;Android Studio問世之後，大家一定很喜歡可以把dependency設定在build.gradle的特性，但相對的這個檔案的管理就變成一門學問了，你知道哪些library有更新的版本嗎？就算知道如果你有十個專案你要一個一個改嗎？&lt;br&gt;andle 就是幫你解決dependency version的工具，可以直接在Terminal更新所有library為最新版本，如果你比較嚴謹也可以加上 &lt;code&gt;-d&lt;/code&gt; 只會列出新版版號不會修改。&lt;/p&gt;&lt;p&gt;範例如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ andle update &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; -g -r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check ./build.gradle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;com.android.tools.build:gradle: 2.0.0-beta4 -&amp;gt; 2.0.0-beta6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check ./A/build.gradle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;com.android.support:cardview-v7: 23.1.1 -&amp;gt; 23.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check ./B/build.gradle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check ./C/build.gradle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;com.android.support:support-v4: 23.1.1 -&amp;gt; 23.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;com.android.support:design: 23.1.1 -&amp;gt; 23.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check ./gradle/wrapper/gradle-wrapper.properties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;心得: 又是一門動態語言，Terminal幾乎都是動態語言的天下，語法上最大不習慣就是用縮排取代括弧，其他結構上跟Ruby有點類似，有點痛苦是Python2.X跟Python3.X有大改版，所以要二種都測試過比較保險，這種新版本一直出來，舊的版本又不能放棄的感覺跟Android實在是太契合了。&lt;/p&gt;&lt;p&gt;更多資訊可以參考 &lt;a href=&quot;https://github.com/Jintin/andle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Jintin/andle&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;Swimat-Objective-C&quot;&gt;&lt;a href=&quot;#Swimat-Objective-C&quot; class=&quot;headerlink&quot; title=&quot;Swimat (Objective-C)&quot;&gt;&lt;/a&gt;Swimat (Objective-C)&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Jintin/Swimat/master/README/preview.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;Swift是我除了Java以外很喜歡的一個語言，也是我接觸iOS開發的第一個語言。但Xcode對它的支援其實還蠻不足的，除了很慢連個基本的自動排版都沒有。&lt;br&gt;Swimat就是一個簡單的Swift排版工具，可以安裝在Xcode裡，支援Tab或Space縮排、可以存檔自動排版。&lt;/p&gt;&lt;p&gt;心得: 原本排版Swift的程式，應該要用Swift寫，但因為要給自己挑戰選了不熟的Objective-C，雖然沒什麼問題但寫起來真的很贅，無法支援 command line 也是一大敗筆，之後要找時間換回Swift也是一個大工程。&lt;/p&gt;&lt;p&gt;更多資訊可以參考 &lt;a href=&quot;https://github.com/Jintin/Swimat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Jintin/Swimat&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;DroidLane-Groovy&quot;&gt;&lt;a href=&quot;#DroidLane-Groovy&quot; class=&quot;headerlink&quot; title=&quot;DroidLane (Groovy)&quot;&gt;&lt;/a&gt;DroidLane (Groovy)&lt;/h2&gt;&lt;p&gt;寫完了Xcode的plugin後，就開始想是不是也可以幫Android這邊也寫一個。因為自己寫太多小app，上架其實很麻煩所以就決定寫個自動上傳的工具。安裝後就不用打開瀏覽器可以在Android Studio裡直接上傳apk。&lt;/p&gt;&lt;p&gt;心得: Groovy其實就是Java的加強版，帶來一些好處也帶來一些缺點，我覺得最大缺點就是速度慢還要多包一些Groovy的library。&lt;/p&gt;&lt;p&gt;更多資訊可以參考 &lt;a href=&quot;https://github.com/Jintin/DroidLane&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Jintin/DroidLane&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;aliasme-Shell&quot;&gt;&lt;a href=&quot;#aliasme-Shell&quot; class=&quot;headerlink&quot; title=&quot;aliasme (Shell)&quot;&gt;&lt;/a&gt;aliasme (Shell)&lt;/h2&gt;&lt;p&gt;身為工程師就是要用 command line 啊，但其實大家都不喜歡打字，切換目錄的時候如果太遠其實很不方便，aliasme就是要解決這樣的需求，讓大家可以很方便的切換目錄。&lt;/p&gt;&lt;p&gt;範例如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ al add A ~/dirA/subA/A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ al add B ~/dirB/subB/B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ al A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Users/Jintin/dirA/subA/A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ al B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Users/Jintin/dirB/subB/B&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;&lt;p&gt;心得: 跟寫Objective-C一樣會感覺到時代的眼淚，如果可以用高階語言寫的就盡量用高階語言寫吧…&lt;/p&gt;&lt;p&gt;更多資訊可以參考 &lt;a href=&quot;https://github.com/Jintin/aliasme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Jintin/aliasme&lt;/a&gt;&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;當工程師好幾年了，但一直都只專注寫Java，雖然對Java沒什麼特別不滿意的地方，但偶而也想多試試其它語言來增加自己的視野，於是大概在半年前開始給自己一個挑戰，每個月用一個不熟的語言寫個小工具分享到github上，很快地累積了好幾個小專案，分享自己的心得也順便介紹這些工具給
    
    </summary>
    
    
  </entry>
  
</feed>
